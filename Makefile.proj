SRCS_C += exec_once.c
SRCS_C += tests/ex_simple_dependency_1.c
SRCS_C += tests/ex_simple_dependency_2.c
SRCS_C += tests/ex_simple_dependency_3.c
SRCS_C += tests/ex_simple_dependency_4.c
SRCS_C += tests/ex_simple_dependency_main.c
SRCS_C += tests/feasibility.c



all: libexec_once.so



libexec_once.so: exec_once.o
	$(CC) -shared -Wl,-soname,$@  -o $@ $+ $(LDFLAGS)
exec_once.o: exec_once.c exec_once.h
	$(CC) $(CFLAGS) -fPIC -c -o $@ $<

install_files += $(libdir)/libexec_once.so
install_files += $(includedir)/exec_once.h
$(includedir)/exec_once.h: exec_once.h
	$(INSTALL) $< $(includedir)/
$(libdir)/libexec_once.so: libexec_once.so
	$(INSTALL) $< $(libdir)/

TESTS += tests/feasibility1.out
.PHONY: tests/feasibility1.out
tests/feasibility1.out: tests/feasibility1.c
	gcc $< && ./a.out > $@

TESTS += tests/feasibility2.out
.PHONY: tests/feasibility2.out
tests/feasibility2.out: tests/feasibility2.c
	gcc $< && ./a.out > $@

TESTS += tests/ex_basic.out
.PHONY: tests/ex_basic.out
tests/ex_basic.out: tests/ex_basic.c libexec_once.so
	gcc -I. $< -L. -lexec_once && env LD_LIBRARY_PATH=. ./a.out  > $@

TESTS += tests/ex_non_exists_tu.out
.PHONY: tests/ex_non_exists_tu.out
## an error is expected, depends on non-existing tu
tests/ex_non_exists_tu.out: tests/ex_non_exists_tu.a.c tests/ex_non_exists_tu.b.c libexec_once.so 
	gcc -I. tests/ex_non_exists_tu.a.c tests/ex_non_exists_tu.b.c -L. -lexec_once && ! env LD_LIBRARY_PATH=.   ./a.out  >$@ 2>&1

TESTS += tests/ex_no_blk.c
.PHONY: tests/ex_no_blk.c
## an error is expected, because not exec block is defined.
tests/ex_no_blk.out: tests/ex_no_blk.c libexec_once.so 
	gcc -I. tests/ex_no_blk.c -L. -lexec_once && ! env LD_LIBRARY_PATH=.   ./a.out  >$@ 2>&1

.PHONY: tests/ex_simple_dependency.out
TESTS += tests/ex_simple_dependency.out
tests/ex_simple_dependency.out: tests/ex_simple_dependency_1.c tests/ex_simple_dependency_2.c tests/ex_simple_dependency_3.c tests/ex_simple_dependency_4.c tests/ex_simple_dependency_main.c
	gcc -I. tests/ex_simple_dependency_1.c tests/ex_simple_dependency_2.c tests/ex_simple_dependency_3.c tests/ex_simple_dependency_4.c tests/ex_simple_dependency_main.c \
        -L. -lexec_once && env EXEC_ONCE_DEBUG=0 LD_LIBRARY_PATH=.  ./a.out  >$@ 2>&1


test:  $(TESTS)


# Local Variables:
# mode:makefile
# coding: utf-8-unix
# End:
